export const Questions = [
  {
    prompt: "Which of the following is not a type of Constructor in C++?",
    optionA: "Default constructor",
    optionB: "Parameterized constructor",
    optionC: "Copy constructor",
    optionD: "Hello constructor",
    answer: "D",
  },
  {
    prompt: "What is the primary purpose of a destructor in C++?",
    optionA: "To create objects",
    optionB: "To initialize objects",
    optionC: "To clean up resources and memory used by objects",
    optionD: "To copy objects",
    answer: "C",
  },
  {
    prompt: "In C++, what is the 'this' pointer used for?",
    optionA: "To access the address of the previous object",
    optionB: "To access the address of the next object",
    optionC: "To access the address of the current object",
    optionD: "To access the address of a random object",
    answer: "C",
  },
  {
    prompt: "Which keyword is used to define a class in C++?",
    optionA: "class",
    optionB: "struct",
    optionC: "define",
    optionD: "declare",
    answer: "A",
  },
  {
    prompt:
      "Which operator is used to access the member functions of a class through a pointer?",
    optionA: "->",
    optionB: ".",
    optionC: "::",
    optionD: "=>",
    answer: "A",
  },
  {
    prompt:
      "What is the correct syntax to inherit a class 'B' from class 'A' in C++?",
    optionA: "class B : A",
    optionB: "class A : B",
    optionC: "class B inherits A",
    optionD: "class A extends B ",
    answer: "A",
  },
  {
    prompt:
      "Which storage class in C++ is used to declare a variable that can be accessed from anywhere in the program?",
    optionA: "auto",
    optionB: "register",
    optionC: "static",
    optionD: "extern",
    answer: "D",
  },
  {
    prompt: "What is the purpose of the 'endl' manipulator in C++?",
    optionA: "To insert a new line character",
    optionB: "To end the program",
    optionC: "To flush the output buffer",
    optionD: "To insert a tab character",
    answer: "A",
  },
  {
    prompt: "Which type of inheritance is not supported in C++?",
    optionA: "Single inheritance",
    optionB: "Multiple inheritance",
    optionC: "Hierarchical inheritance",
    optionD: "Hybrid inheritance",
    answer: "B",
  },
  {
    prompt: "What is the purpose of the 'new' operator in C++?",
    optionA: "To allocate memory for a variable",
    optionB: "To define a new data type",
    optionC: "To create a new class",
    optionD: "To initialize a variable",
    answer: "A",
  },
  {
    prompt: "Which C++ keyword is used to dynamically deallocate memory?",
    optionA: "dispose",
    optionB: "free",
    optionC: "delete",
    optionD: "release",
    answer: "C",
  },
  {
    prompt: "What does the 'const' keyword indicate in C++?",
    optionA: "The variable cannot be modified",
    optionB: "The variable is a constant expression",
    optionC: "The variable is an integer",
    optionD: "The variable is of class type",
    answer: "A",
  },
  {
    prompt:
      "Which loop construct is used to execute a block of code at least once in C++?",
    optionA: "for loop",
    optionB: "while loop",
    optionC: "do-while loop",
    optionD: "repeat loop",
    answer: "C",
  },
  {
    prompt: "What is the purpose of the 'break' statement in C++?",
    optionA: "To end the program",
    optionB: "To exit a loop or switch statement",
    optionC: "To pause the execution of the program",
    optionD: "To skip to the next iteration of a loop",
    answer: "B",
  },
  {
    prompt: "What is the correct way to declare a constant in C++?",
    optionA: "const int x = 5;",
    optionB: "final x = 5;",
    optionC: "constant x = 5;",
    optionD: "int x const = 5;",
    answer: "A",
  },
  {
    prompt: "What is the purpose of the 'virtual' keyword in C++?",
    optionA: "To define a class as a base class",
    optionB: "To declare a variable as non-modifiable",
    optionC: "To indicate a member function is polymorphic",
    optionD: "To define a global variable",
    answer: "C",
  },
  {
    prompt: "What is the correct syntax to create an object of class 'Car'?",
    optionA: "Car myCar;",
    optionB: "Car = new Car();",
    optionC: "new Car myCar;",
    optionD: "myCar = Car();",
    answer: "A",
  },
  {
    prompt: "Which of the following is not a valid storage class in C++?",
    optionA: "auto",
    optionB: "dynamic",
    optionC: "mutable",
    optionD: "thread_local",
    answer: "B",
  },
  {
    prompt:
      "What is the correct way to access a public member variable 'count' of class 'Counter'?",
    optionA: "Counter.count",
    optionB: "count.Counter",
    optionC: "Counter::count",
    optionD: "count::Counter",
    answer: "C",
  },
  // Add more questions here
];
